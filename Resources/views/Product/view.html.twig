{% extends frontend() %}

{% block stylesheets %}
{{ parent() }}
    <link rel="canonical" href="{{ path('cart_product_view', { 'slug': entity.slug }) }}" />
{% endblock %}

{% block javascripts %}
{{ parent() }}

    <script src="{{ asset('bundles/mobilecartfrontend/js/product-view.js') }}"></script>

    <script type="text/javascript">
        $(function() {

            //initialize add-to-cart button, etc
            //App.views.productView = new App.views.ProductView();

            //App.collections.cartInfo = new App.collections.CartInfoCollection();
            //App.collections.cartInfo.fetch();

            //Backbone.history.start({pushState: true});

            var productConfig = {{ entity.config|raw }};
            var optionProducts = {
                init: function(productType) {
                    switch(productType) {
                        case 1:

                            break;
                        case 2:
                            if (_.has(productConfig, 'config_values')
                                    && _.isArray(productConfig['config_values'])) {

                                var configValues = productConfig['config_values'];
                                _.forEach(configValues, function(configValue){
                                    if (_.has(configValue, 'var_code')) {
                                        var varCode = configValue['var_code'];
                                        var products = [];
                                        if (_.has(configValue, 'product_values')
                                                && _.isArray(configValue['product_values'])) {

                                            var productValue = _.first(configValue['product_values']);
                                            if (_.has(productValue, 'products')
                                                    && _.isArray(productValue['products'])) {

                                                products = productValue['products'];
                                            }
                                        }

                                        optionProducts.options[varCode] = products;
                                    }
                                });

                                $('select.config-option').change(function(e){
                                    var anOption = $(this);
                                    optionProducts.selectConfigurableOption(anOption.attr('name'), anOption.val());
                                });

                                $('form.add-to-cart').submit(function(e){
                                    var isOk = false;
                                    var simples = [];
                                    var i = 0;
                                    for(key in optionProducts.options) {

                                        if (i == 0) {
                                            simples = optionProducts.options[key];
                                        } else {
                                            simples = _.intersection(optionProducts.options[key], simples);
                                        }
                                        i++;
                                    }

                                    if (simples.length > 0) {
                                        _.forEach(simples, function(simple){
                                            if (_.contains(productConfig['is_in_stock'], simple)) {
                                                $('input#simple_id').val(simple);
                                                isOk = true;
                                                //break;
                                            }
                                        });
                                    }

                                    return isOk;
                                });
                            }
                            break;
                        default:

                            break;
                    }
                },
                selectConfigurableOption: function(varCode, varValue) {
                    if (_.has(productConfig, 'config_values')) {
                        var configValues = productConfig['config_values'];
                        _.forEach(configValues, function(configValue){
                            if (_.has(configValue, 'var_code') &&
                                    configValue['var_code'] == varCode) {

                                if (_.has(configValue, 'product_values')) {
                                    var productValues = configValue['product_values'];
                                    _.forEach(productValues, function(productValue){
                                        if (_.has(productValue, 'value') &&
                                                productValue['value'] == varValue &&
                                                _.has(productValue, 'products')) {

                                            optionProducts.options[varCode] = productValue['products'];
                                        }
                                    });
                                }
                            }
                        });
                    }
                },
                options : {}
            };
            optionProducts.init({{ entity.type }});
        });
    </script>
{% endblock %}

{% block content %}

<div class="container">
    <div class="row">

        <div class="col-sm-12">

            <img class="slide-image" src="{{ asset(imagePath('product', entity, 'view_jumbo')) }}" alt="" />

        </div>
    </div>
    <div class="row">


        <div class="col-sm-12 col-md-6">

            <ul class="nav nav-tabs">
                <li class="active">
                    <a href="#general" data-toggle="tab" aria-expanded="true">General</a>
                </li>
                <li>
                    <a href="#misc" data-toggle="tab" aria-expanded="false">Misc</a>
                </li>
            </ul>
            <div class="tab-content">
                <div id="general" class="tab-pane fade active in">
                    <p>{{ entity.content }}</p>
                </div>
                <div id="misc" class="tab-pane">
                    <p>misc stuff bla bla</p>
                </div>
            </div>
        </div>
        <div class="col-md-6 col-sm-12">

            <div class="row">
                <div class="col-xs-12">
                    <h4 class="pull-right">{{ decorate(entity.price) }}</h4>
                    <h4>{{ entity.name }}</h4>
                </div>
            </div>
            <form method="post" class="add-to-cart" action="{{ path('cart_add_item', {'id': entity.id}) }}">
                {% if entity.type == 2 %}
                    <input type="hidden" id="simple_id" name="simple_id" value="" />
                {% endif %}

                {% if config_data.config_values is defined %}
                    {% for option in config_data.config_values %}
                        <div class="row">
                            <div class="col-xs-12">
                                <label for="{{ option.var_code }}">{{ option.label }}</label>
                                <select class="config-option form-control" name="{{ option.var_code }}">
                                    {% for option_value in option.product_values %}
                                        <option value="{{ option_value.value }}">{{ option_value.value }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                    {% endfor %}
                {% endif %}
                <div class="row">
                    <div class="col-xs-12">
                        <label for="qty">Quantity</label>
                        <input type="number" class="form-control" name="qty" value="1" />
                    </div>
                </div>
                <div class="row cart-buttons">
                    <div class="col-xs-12">
                        {% if entity.getIsInStock() %}
                            <button type="submit" class="btn btn-primary addtocart pull-right"><i class="glyphicon glyphicon-shopping-cart icon-white"> </i>Add to Cart</button>
                        {% elseif entity.canBackorder() %}
                            <button type="submit" class="btn btn-primary addtocart pull-right">Backorder</button>
                        {% else %}
                            <p>Currently Unavailable</p>
                        {% endif %}
                    </div>
                </div>
            </form>
        </div>

    </div>
    <div class="row">
        <div class="col-sm-12">

        </div>
    </div>
</div>
{% endblock %}
